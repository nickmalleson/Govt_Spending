library(ineq)
library(lawstat)
install.packages("ineq")
help(abline)
26
install.packages("ineq")
66
setRepositories(
)
chooseCRANmirror()
install.packages("ineq")
install.packages("ineq")
library(ineq)
data(AirPassengers)
plot(Lc(AirPassengers))
plot(Lc(AirPassengers), col="darkred", lwd=2, xlab="Cumulative Percentage", ylab="Proportion of Income")
plot(Lc(AirPassengers), col="darkred", lwd=3, xlab="Cumulative Percentage", ylab="Proportion of Income")
curve(Lc(AirPassengers), col="darkred", lwd=3, xlab="Cumulative Percentage", ylab="Proportion of Income")
help(lc)
help(Lc)
curve(Lc(AirPassengers))
# Do a graph and regression exploring how the percentage of a
# region that is defined as 'urban' changes with the
# population in each district.
d <- read.csv('urban_region_data.csv')
options(scipen=5)
# Log-log linear model
m1 <- lm(log(d$ProportionUrban)~log(d$PopDensity))
quartz(width=11, height=5)
#par(mfrow=c(1,2))
names(d)
# Non-logged plot
plot(x=d$PopDensity, y=d$ProportionUrban, xlab="Population Density", ylab="Proportion of Urban Area",
main="Population density against proportion of area that is urban in English Local Authority Districts")
summary(m1)
# Do a plot with the line of best fit and R^2 value
plot(x=log(d$PopDensity), y=log(d$ProportionUrban), xlab="Log Population Density", ylab="Log Proportion of Urban Area",
main="Population density against proportion of area that is urban in English Local Authority Districts")
abline(m1, col='red')
text(x=-5, y=-1, labels=paste("R squared = ",signif(summary(m1)$r.squared,3)))
summary(m1)
data(newhaven)
library(GISTools)
install.packages("GISTools")
library(GISTools)
data(newhaven)
> par(mar=c(0,0,0,0))
> breach.dens = kde.points(breach,lims=tracts)
> masker <- poly.outer(breach.dens,tracts,extend=100) > level.plot(breach.dens)
> add.masking(masker)
> plot(tracts,add=TRUE)
par(mar=c(0,0,0,0))
breach.dens = kde.points(breach,lims=tracts)
masker <- poly.outer(breach.dens,tracts,extend=100) > level.plot(breach.dens)
add.masking(masker)
plot(tracts,add=TRUE)
par(mar=c(0,0,0,0))
breach.dens = kde.points(breach,lims=tracts)
masker <- poly.outer(breach.dens,tracts,extend=100) > level.plot(breach.dens)
add.masking(masker)
plot(tracts,add=TRUE)
par(mar=c(0,0,0,0))
plot(tracts,add=TRUE)
breach.dens = kde.points(breach,lims=tracts)
masker <- poly.outer(breach.dens,tracts,extend=100) > level.plot(breach.dens)
plot(tracts,add=TRUE)
This is an R Markdown document. Markdown is a simple formatting syntax for authoring web pages (click the **MD** toolbar button for help on Markdown).
When you click the **Knit HTML** button a web page will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
library("knitr")
```{r}
Title
========================================================
This is an R Markdown document. Markdown is a simple formatting syntax for authoring web pages (click the **MD** toolbar button for help on Markdown).
When you click the **Knit HTML** button a web page will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r}
summary(cars)
```
You can also embed plots, for example:
```{r fig.width=7, fig.height=6}
plot(cars)
```
Title
install.packages("knitr")
help(knitr)
library("knitr")
help(knitr)
tmPlot(GNI2010,
index=c("continent", "iso3"),
vSize="population",
vColor="GNI",
type="value")
library('treemap')
tmPlot(GNI2010,
index=c("continent", "iso3"),
vSize="population",
vColor="GNI",
type="value")
data(GNI2010)
tmPlot(GNI2010,
index=c("continent", "iso3"),
vSize="population",
vColor="GNI",
type="value")
```
```{r}
treemap(d,
index=c("Department", "Description"), # Columns in order of aggregation
vSize="spend_2011_12", # Size of rectangles
type="index",
title="UK Government spending by department",
title.legend="Change (ignore inflation) in spending, 2010/11 - 2011/12")
```
treemap(d,
index=c("Department", "Description"), # Columns in order of aggregation
vSize="spend_2011_12", # Size of rectangles
type="index",
title="UK Government spending by department",
title.legend="Change (ignore inflation) in spending, 2010/11 - 2011/12")
library('treemap')
setwd("~/mapping/projects/blog/Govt_Spending/code/")
d <- read.csv('../data/test_data2.csv')
treemap(d,
index=c("Department", "Description"), # Columns in order of aggregation
vSize="spend_2011_12", # Size of rectangles
type="index",
title="UK Government spending by department",
title.legend="Change (ignore inflation) in spending, 2010/11 - 2011/12")
